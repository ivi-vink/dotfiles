#!/bin/sh
if SOME_VARIABLE=`push.sh 2>/dev/null`
then	eval "$SOME_VARIABLE"
else	echo "push.sh not installed" >&2; exit 1
fi

# Open host handler if not already exists
if ! { ps ax | grep pnsh-host-handler | grep -v grep >/dev/null 2>&1 ; }
then mkdir -p "$HOME/.cache/pnsh"
     touch "$HOME/.cache/pnsh/open"
     sh -c "find '$HOME/.cache/pnsh' | nohup entr -p pnsh-host-handler /_ &" >/dev/null 2>&1
fi

# Append arguments that configure pnsh.
da="--pnsh-docker-arg="
Push args \
  $da--init \
  $da"--env=SHELL=/usr/local/bin/oksh" \
  $da"--entrypoint=/usr/local/bin/oksh" \
  $da"--env=HOME" \
  $da"--volume=${HOME}:${HOME}" \
  $da"--volume=${HOME}/.ssh:/root/.ssh" \
  $da"--workdir=${PWD:-$HOME}" \
  $da"--hostname=pnsh" \
  $da"--net=host" \
  $da"--env=XDG_RUNTIME_DIR" \
  $da"--env=TERM=xterm-ghostty" \
  $da"--volume=$TERMINFO/78/xterm-ghostty:/usr/share/terminfo/x/xterm-ghostty" \
  $da"--volume=${XDG_RUNTIME_DIR:-/var/run}/docker.sock:/var/run/docker.sock" \
  $da"--workdir=${PWD:-$HOME}" \
  --pnsh-shell=/usr/local/bin/oksh \
  --docker-image=okshnew \
  --docker-tag=latest \
  --with-docker

if [ "${1}" = "--targets" ]
then shift; eval "set -- $args $@"; exec pnsh "$@"
fi

my_name="$(basename "$0")"
cmd=
if [ $# -gt 0 ]
then if [ x"$my_name" != x"pn" ]
     then Push cmd "$my_name"
     fi
     Push cmd "$@"; Push args -- -l -c "$cmd"
else if [ x"$my_name" != x"pn" ]
     then Push cmd "$my_name"; Push args -- -l -c "$cmd"
     fi
fi

eval "set -- $args"
exec pnsh "$@"
